<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace NxSys\Library\Clients\Brex\API\Transactions\Normalizer;

use NxSys\Library\Clients\Brex\API\Transactions\Runtime\Normalizer\CheckArray;
use NxSys\Library\Clients\Brex\API\Transactions\Runtime\Normalizer\ValidatorTrait;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class JaneObjectNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;
        protected $normalizers = [
            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccount::class => CardAccountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountCurrentBalance::class => CardAccountCurrentBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAvailableBalance::class => CardAccountAvailableBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAccountLimit::class => CardAccountAccountLimitNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransaction::class => CardTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransactionMerchant::class => CardTransactionMerchantNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CashAccount::class => CashAccountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransaction::class => CashTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransactionAmount::class => CashTransactionAmountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\MerchantData::class => MerchantDataNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\Money::class => MoneyNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCardTransaction::class => PageCardTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashAccount::class => PageCashAccountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashTransaction::class => PageCashTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageStatement::class => PageStatementNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\Statement::class => StatementNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementStartBalance::class => StatementStartBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementEndBalance::class => StatementEndBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementPeriod::class => StatementPeriodNormalizer::class,

            \Jane\Component\JsonSchemaRuntime\Reference::class => \NxSys\Library\Clients\Brex\API\Transactions\Runtime\Normalizer\ReferenceNormalizer::class,
        ];
        protected $normalizersCache = [];

        public function supportsDenormalization($data, $type, $format = null, array $context = []): bool
        {
            return array_key_exists($type, $this->normalizers);
        }

        public function supportsNormalization($data, $format = null, array $context = []): bool
        {
            return is_object($data) && array_key_exists(get_class($data), $this->normalizers);
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $normalizerClass = $this->normalizers[get_class($object)];
            $normalizer = $this->getNormalizer($normalizerClass);

            return $normalizer->normalize($object, $format, $context);
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            $denormalizerClass = $this->normalizers[$type];
            $denormalizer = $this->getNormalizer($denormalizerClass);

            return $denormalizer->denormalize($data, $type, $format, $context);
        }

        private function getNormalizer(string $normalizerClass)
        {
            return $this->normalizersCache[$normalizerClass] ?? $this->initNormalizer($normalizerClass);
        }

        private function initNormalizer(string $normalizerClass)
        {
            $normalizer = new $normalizerClass();
            $normalizer->setNormalizer($this->normalizer);
            $normalizer->setDenormalizer($this->denormalizer);
            $this->normalizersCache[$normalizerClass] = $normalizer;

            return $normalizer;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountCurrentBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAvailableBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAccountLimit::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransactionMerchant::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CashAccount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransactionAmount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\MerchantData::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\Money::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCardTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashAccount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageStatement::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\Statement::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementStartBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementEndBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementPeriod::class => false,
                \Jane\Component\JsonSchemaRuntime\Reference::class => false,
            ];
        }
    }
} else {
    class JaneObjectNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;
        protected $normalizers = [
            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccount::class => CardAccountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountCurrentBalance::class => CardAccountCurrentBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAvailableBalance::class => CardAccountAvailableBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAccountLimit::class => CardAccountAccountLimitNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransaction::class => CardTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransactionMerchant::class => CardTransactionMerchantNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CashAccount::class => CashAccountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransaction::class => CashTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransactionAmount::class => CashTransactionAmountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\MerchantData::class => MerchantDataNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\Money::class => MoneyNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCardTransaction::class => PageCardTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashAccount::class => PageCashAccountNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashTransaction::class => PageCashTransactionNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\PageStatement::class => PageStatementNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\Statement::class => StatementNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementStartBalance::class => StatementStartBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementEndBalance::class => StatementEndBalanceNormalizer::class,

            \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementPeriod::class => StatementPeriodNormalizer::class,

            \Jane\Component\JsonSchemaRuntime\Reference::class => \NxSys\Library\Clients\Brex\API\Transactions\Runtime\Normalizer\ReferenceNormalizer::class,
        ];
        protected $normalizersCache = [];

        public function supportsDenormalization($data, $type, $format = null, array $context = []): bool
        {
            return array_key_exists($type, $this->normalizers);
        }

        public function supportsNormalization($data, $format = null, array $context = []): bool
        {
            return is_object($data) && array_key_exists(get_class($data), $this->normalizers);
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $normalizerClass = $this->normalizers[get_class($object)];
            $normalizer = $this->getNormalizer($normalizerClass);

            return $normalizer->normalize($object, $format, $context);
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            $denormalizerClass = $this->normalizers[$type];
            $denormalizer = $this->getNormalizer($denormalizerClass);

            return $denormalizer->denormalize($data, $type, $format, $context);
        }

        private function getNormalizer(string $normalizerClass)
        {
            return $this->normalizersCache[$normalizerClass] ?? $this->initNormalizer($normalizerClass);
        }

        private function initNormalizer(string $normalizerClass)
        {
            $normalizer = new $normalizerClass();
            $normalizer->setNormalizer($this->normalizer);
            $normalizer->setDenormalizer($this->denormalizer);
            $this->normalizersCache[$normalizerClass] = $normalizer;

            return $normalizer;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountCurrentBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAvailableBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardAccountAccountLimit::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CardTransactionMerchant::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CashAccount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\CashTransactionAmount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\MerchantData::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\Money::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCardTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashAccount::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageCashTransaction::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\PageStatement::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\Statement::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementStartBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementEndBalance::class => false,
                \NxSys\Library\Clients\Brex\API\Transactions\Model\StatementPeriod::class => false,
                \Jane\Component\JsonSchemaRuntime\Reference::class => false,
            ];
        }
    }
}
