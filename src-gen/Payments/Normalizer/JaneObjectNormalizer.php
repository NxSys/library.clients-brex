<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace NxSys\Library\Clients\Brex\API\Payments\Normalizer;

use NxSys\Library\Clients\Brex\API\Payments\Runtime\Normalizer\CheckArray;
use NxSys\Library\Clients\Brex\API\Payments\Runtime\Normalizer\ValidatorTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class JaneObjectNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;
    protected $normalizers = ['NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\ACHDetailsRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\ACHDetailsRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\ACHDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\ACHDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\Address' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\AddressNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\Balance' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BalanceNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BankAccountDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BankAccountDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BankAccountDetailsResponsebeneficiaryBank' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BankAccountDetailsResponsebeneficiaryBankNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BankConnection' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BankConnectionNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BankConnectionAvailableBalance' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BankConnectionAvailableBalanceNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BankConnectionCurrentBalance' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BankConnectionCurrentBalanceNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BankDetails' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BankDetailsNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BeneficiaryBank' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BeneficiaryBankNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BeneficiaryBankAddress' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BeneficiaryBankAddressNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BookTransferDetails' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BookTransferDetailsNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BookTransferDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BookTransferDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BrexCashAccountDetails' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BrexCashAccountDetailsNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BrexCashAccountDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BrexCashAccountDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\BrexCashDetails' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\BrexCashDetailsNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\ChequeDetailsRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\ChequeDetailsRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\ChequeDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\ChequeDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\CounterPartyBankDetails' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\CounterPartyBankDetailsNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\CreateIncomingTransferRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\CreateIncomingTransferRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\CreateTransferRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\CreateTransferRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\CreateVendorRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\CreateVendorRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\DomesticWireDetailsRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\DomesticWireDetailsRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\DomesticWireDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\DomesticWireDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\InternationalWireDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\InternationalWireDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\Money' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\MoneyNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\PageBankConnection' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\PageBankConnectionNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\PageTransfer' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\PageTransferNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\PageVendorResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\PageVendorResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\PaymentAccountRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\PaymentAccountRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\PaymentAccountResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\PaymentAccountResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\Recipient' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\RecipientNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\Transfer' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\TransferNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\TransferCounterparty' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\TransferCounterpartyNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\UpdateVendorRequest' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\UpdateVendorRequestNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\VendorDetails' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\VendorDetailsNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\VendorDetailsResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\VendorDetailsResponseNormalizer', 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Model\\VendorResponse' => 'NxSys\\Library\\Clients\\Brex\\API\\Payments\\Normalizer\\VendorResponseNormalizer', '\\Jane\\Component\\JsonSchemaRuntime\\Reference' => '\\NxSys\\Library\\Clients\\Brex\\API\\Payments\\Runtime\\Normalizer\\ReferenceNormalizer'];
    protected $normalizersCache = [];

    public function supportsDenormalization($data, $type, $format = null): bool
    {
        return array_key_exists($type, $this->normalizers);
    }

    public function supportsNormalization($data, $format = null): bool
    {
        return is_object($data) && array_key_exists(get_class($data), $this->normalizers);
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $normalizerClass = $this->normalizers[get_class($object)];
        $normalizer = $this->getNormalizer($normalizerClass);

        return $normalizer->normalize($object, $format, $context);
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        $denormalizerClass = $this->normalizers[$class];
        $denormalizer = $this->getNormalizer($denormalizerClass);

        return $denormalizer->denormalize($data, $class, $format, $context);
    }

    private function getNormalizer(string $normalizerClass)
    {
        return $this->normalizersCache[$normalizerClass] ?? $this->initNormalizer($normalizerClass);
    }

    private function initNormalizer(string $normalizerClass)
    {
        $normalizer = new $normalizerClass();
        $normalizer->setNormalizer($this->normalizer);
        $normalizer->setDenormalizer($this->denormalizer);
        $this->normalizersCache[$normalizerClass] = $normalizer;

        return $normalizer;
    }
}
