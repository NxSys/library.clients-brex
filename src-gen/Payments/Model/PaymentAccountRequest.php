<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace NxSys\Library\Clients\Brex\API\Payments\Model;

class PaymentAccountRequest extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Payment Instruments associated with the vendor.
     * Each vendor can only have one payment account per payment instrument type. For instance, a vendor may have associated details for each of ACH, DOMESTIC_WIRE, and CHEQUE, but they cannot have 2 entries for ACH. If you modify a vendor's existing payment instrument type with new details, it will overwrite any previous data.
     *
     * @var array<string, mixed>
     */
    protected $details;

    /**
     * Payment Instruments associated with the vendor.
     * Each vendor can only have one payment account per payment instrument type. For instance, a vendor may have associated details for each of ACH, DOMESTIC_WIRE, and CHEQUE, but they cannot have 2 entries for ACH. If you modify a vendor's existing payment instrument type with new details, it will overwrite any previous data.
     *
     * @return array<string, mixed>
     */
    public function getDetails(): iterable
    {
        return $this->details;
    }

    /**
     * Payment Instruments associated with the vendor.
     * Each vendor can only have one payment account per payment instrument type. For instance, a vendor may have associated details for each of ACH, DOMESTIC_WIRE, and CHEQUE, but they cannot have 2 entries for ACH. If you modify a vendor's existing payment instrument type with new details, it will overwrite any previous data.
     *
     * @param array<string, mixed> $details
     */
    public function setDetails(iterable $details): self
    {
        $this->initialized['details'] = true;
        $this->details = $details;

        return $this;
    }
}
