<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace NxSys\Library\Clients\Brex\API\Expenses\Model;

class CreateAsyncFileUploadResponse extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The unique identifier for the request.
     *
     * @var string
     */
    protected $id;
    /**
     * The pre-signed S3 link that should be used to upload the file.
     *
     * @var string
     */
    protected $uri;

    /**
     * The unique identifier for the request.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * The unique identifier for the request.
     */
    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The pre-signed S3 link that should be used to upload the file.
    The maximum size accepted for this document is 50 MB.
     */
    public function getUri(): string
    {
        return $this->uri;
    }

    /**
     * The pre-signed S3 link that should be used to upload the file.
    The maximum size accepted for this document is 50 MB.
     */
    public function setUri(string $uri): self
    {
        $this->initialized['uri'] = true;
        $this->uri = $uri;

        return $this;
    }
}
