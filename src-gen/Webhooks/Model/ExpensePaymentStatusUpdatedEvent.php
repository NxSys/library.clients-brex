<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace NxSys\Library\Clients\Brex\API\Webhooks\Model;

class ExpensePaymentStatusUpdatedEvent extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var string
     */
    protected $eventType;
    /**
     * @var string
     */
    protected $expenseId;
    /**
     * `PENDING`:The transaction is yet to be captured. It may be approved, yet to be approved, or yet to be declined.
     *
     * `DECLINED`: The transaction was declined.
     *
     * @var string
     */
    protected $paymentStatus;
    /**
     * `PURCHASE`: A pending transaction for making a purchase.
     *
     * `REFUND`: A pending transaction for a refund.
     *
     * `WITHDRAWAL`: A pending transaction for a withdrawal.
     *
     * `DECLINED`: A pending transaction that was declined and will not be completed.
     *
     * @var string
     */
    protected $paymentType;
    /**
     * This is the `id` returned in the [Get Company](/openapi/team_api/#operation/getCompany) endpoint.
     * You can use the `company_id` to determine which access token to use when you get the details from our API endpoints.
     *
     * @var string
     */
    protected $companyId;
    /**
     * @var ExpensePaymentStatusUpdatedEventAmount
     */
    protected $amount;
    /**
     * The name of the card acceptor.
     *
     * @var string
     */
    protected $paymentDescription;

    public function getEventType(): string
    {
        return $this->eventType;
    }

    public function setEventType(string $eventType): self
    {
        $this->initialized['eventType'] = true;
        $this->eventType = $eventType;

        return $this;
    }

    public function getExpenseId(): string
    {
        return $this->expenseId;
    }

    public function setExpenseId(string $expenseId): self
    {
        $this->initialized['expenseId'] = true;
        $this->expenseId = $expenseId;

        return $this;
    }

    /**
     * `PENDING`:The transaction is yet to be captured. It may be approved, yet to be approved, or yet to be declined.
     *
     * `DECLINED`: The transaction was declined.
     */
    public function getPaymentStatus(): string
    {
        return $this->paymentStatus;
    }

    /**
     * `PENDING`:The transaction is yet to be captured. It may be approved, yet to be approved, or yet to be declined.
     *
     * `DECLINED`: The transaction was declined.
     */
    public function setPaymentStatus(string $paymentStatus): self
    {
        $this->initialized['paymentStatus'] = true;
        $this->paymentStatus = $paymentStatus;

        return $this;
    }

    /**
     * `PURCHASE`: A pending transaction for making a purchase.
     *
     * `REFUND`: A pending transaction for a refund.
     *
     * `WITHDRAWAL`: A pending transaction for a withdrawal.
     *
     * `DECLINED`: A pending transaction that was declined and will not be completed.
     */
    public function getPaymentType(): string
    {
        return $this->paymentType;
    }

    /**
     * `PURCHASE`: A pending transaction for making a purchase.
     *
     * `REFUND`: A pending transaction for a refund.
     *
     * `WITHDRAWAL`: A pending transaction for a withdrawal.
     *
     * `DECLINED`: A pending transaction that was declined and will not be completed.
     */
    public function setPaymentType(string $paymentType): self
    {
        $this->initialized['paymentType'] = true;
        $this->paymentType = $paymentType;

        return $this;
    }

    /**
     * This is the `id` returned in the [Get Company](/openapi/team_api/#operation/getCompany) endpoint.
     * You can use the `company_id` to determine which access token to use when you get the details from our API endpoints.
     */
    public function getCompanyId(): string
    {
        return $this->companyId;
    }

    /**
     * This is the `id` returned in the [Get Company](/openapi/team_api/#operation/getCompany) endpoint.
     * You can use the `company_id` to determine which access token to use when you get the details from our API endpoints.
     */
    public function setCompanyId(string $companyId): self
    {
        $this->initialized['companyId'] = true;
        $this->companyId = $companyId;

        return $this;
    }

    public function getAmount(): ExpensePaymentStatusUpdatedEventAmount
    {
        return $this->amount;
    }

    public function setAmount(ExpensePaymentStatusUpdatedEventAmount $amount): self
    {
        $this->initialized['amount'] = true;
        $this->amount = $amount;

        return $this;
    }

    /**
     * The name of the card acceptor.
     */
    public function getPaymentDescription(): string
    {
        return $this->paymentDescription;
    }

    /**
     * The name of the card acceptor.
     */
    public function setPaymentDescription(string $paymentDescription): self
    {
        $this->initialized['paymentDescription'] = true;
        $this->paymentDescription = $paymentDescription;

        return $this;
    }
}
