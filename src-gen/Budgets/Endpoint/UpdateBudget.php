<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace NxSys\Library\Clients\Brex\API\Budgets\Endpoint;

class UpdateBudget extends \NxSys\Library\Clients\Brex\API\Budgets\Runtime\Client\BaseEndpoint implements \NxSys\Library\Clients\Brex\API\Budgets\Runtime\Client\Endpoint
{
    use \NxSys\Library\Clients\Brex\API\Budgets\Runtime\Client\EndpointTrait;
    protected $id;

    /**
    Updates a Budget

     *
     * @param array $headerParameters {
     *
     *     @var string $Idempotency-Key
     * }
     */
    public function __construct(string $id, \NxSys\Library\Clients\Brex\API\Budgets\Model\UpdateBudgetRequest $requestBody, array $headerParameters = [])
    {
        $this->id = $id;
        $this->body = $requestBody;
        $this->headerParameters = $headerParameters;
    }

    public function getMethod(): string
    {
        return 'PUT';
    }

    public function getUri(): string
    {
        return str_replace(['{id}'], [$this->id], '/v1/budgets/{id}');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        if ($this->body instanceof \NxSys\Library\Clients\Brex\API\Budgets\Model\UpdateBudgetRequest) {
            return [['Content-Type' => ['application/json']], $serializer->serialize($this->body, 'json')];
        }

        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    protected function getHeadersOptionsResolver(): \Symfony\Component\OptionsResolver\OptionsResolver
    {
        $optionsResolver = parent::getHeadersOptionsResolver();
        $optionsResolver->setDefined(['Idempotency-Key']);
        $optionsResolver->setRequired(['Idempotency-Key']);
        $optionsResolver->setDefaults([]);
        $optionsResolver->addAllowedTypes('Idempotency-Key', ['string']);

        return $optionsResolver;
    }

    /**
     * {@inheritdoc}
     *
     * @return \NxSys\Library\Clients\Brex\API\Budgets\Model\Budget|null
     *
     * @throws \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetBadRequestException
     * @throws \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetUnauthorizedException
     * @throws \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetForbiddenException
     * @throws \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetNotFoundException
     */
    protected function transformResponseBody(\Psr\Http\Message\ResponseInterface $response, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        $status = $response->getStatusCode();
        $body = (string) $response->getBody();
        if (is_null($contentType) === false && (200 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            return $serializer->deserialize($body, 'NxSys\\Library\\Clients\\Brex\\API\\Budgets\\Model\\Budget', 'json');
        }
        if (400 === $status) {
            throw new \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetBadRequestException($response);
        }
        if (401 === $status) {
            throw new \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetUnauthorizedException($response);
        }
        if (403 === $status) {
            throw new \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetForbiddenException($response);
        }
        if (404 === $status) {
            throw new \NxSys\Library\Clients\Brex\API\Budgets\Exception\UpdateBudgetNotFoundException($response);
        }
    }

    public function getAuthenticationScopes(): array
    {
        return ['OAuth2'];
    }
}
